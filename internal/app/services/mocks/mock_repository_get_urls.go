// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/stlesnik/url_shortener/internal/app/services (interfaces: URLList)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/stlesnik/url_shortener/internal/app/models"
)

// MockURLList is a mock of URLList interface.
type MockURLList struct {
	ctrl     *gomock.Controller
	recorder *MockURLListMockRecorder
}

// MockURLListMockRecorder is the mock recorder for MockURLList.
type MockURLListMockRecorder struct {
	mock *MockURLList
}

// NewMockURLList creates a new mock instance.
func NewMockURLList(ctrl *gomock.Controller) *MockURLList {
	mock := &MockURLList{ctrl: ctrl}
	mock.recorder = &MockURLListMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockURLList) EXPECT() *MockURLListMockRecorder {
	return m.recorder
}

// GetURLList mocks base method.
func (m *MockURLList) GetURLList(arg0 context.Context, arg1 string) ([]models.BaseURLResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetURLList", arg0, arg1)
	ret0, _ := ret[0].([]models.BaseURLResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetURLList indicates an expected call of GetURLList.
func (mr *MockURLListMockRecorder) GetURLList(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetURLList", reflect.TypeOf((*MockURLList)(nil).GetURLList), arg0, arg1)
}
